buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.+'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 21
    buildToolsVersion '21.1.1'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 188
        versionName '1.5.6'
        /*
         * Official package name used by the Google Play store.
         * WARNING: Changing this will create a new app with no history.
         */
        applicationId 'com.aircandi.catalina'
    }

    signingConfigs {
        release {
            storeFile file('aircandi.keystore')
            keyAlias 'aircandi'
            storePassword 'Doo.dah.1'
            keyPassword 'Doo.dah.1'
        }
    }

    buildTypes {
        /*
         * shrinkResources will remove unused resources from build. A resource will
         * be considered used if we have it associated with a theme attr even if that
         * attr is not being used.
         */
        debug {
            minifyEnabled true  // TODO: Remove once we shift to granular dependencies for play services.
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            zipAlignEnabled true
            debuggable true
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            zipAlignEnabled true
            debuggable false
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
        }
    }
}

dependencies {

    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'com.google.android.gms:play-services:6.5.+'
    compile 'com.google.maps.android:android-maps-utils:0.3+'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okio:okio:1.0.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.squareup.picasso:picasso:2.4.+'
    compile 'net.minidev:json-smart:1.2'
    /*
     * File libs are done individually so we know exactly what is being used.
     */
    compile files('libs/aws-android-sdk-2.0.5-core.jar')
    compile files('libs/aws-android-sdk-2.0.5-s3.jar')
    compile files('libs/image-chooser-library.jar')
    compile files('libs/imageviewtouch.jar')
    compile files('libs/cwac-adapter-wrapper.jar')
    compile files('libs/endless-1.2.3.jar')

    compile('com.crashlytics.sdk.android:crashlytics:2.1.0@aar') {
        transitive = true;
    }
}